name: Liquibase Migrationn

on:
  push:
    branches:
      - main # Change this if needed
  
  workflow_dispatch:  

jobs:
  liquibase-update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Liquibase
        run: |
          wget https://github.com/liquibase/liquibase/releases/download/v4.25.0/liquibase-4.25.0.zip
          unzip liquibase-4.25.0.zip -d /opt/liquibase
          chmod +x /opt/liquibase/liquibase


      - name: Test DB Connection
        run: |
          nc -zv 13.212.238.210 3306

      - name: Copy Liquibase Configuration Files
        run: |
          mkdir -p /opt/liquibase  
          cp $GITHUB_WORKSPACE/opt/liquibase/liquibase.properties /opt/liquibase/liquibase.properties
          cp $GITHUB_WORKSPACE/opt/liquibase/changelog.xml /opt/liquibase/changelog.xml
          ls -l /opt/liquibase  

      - name: Debug Liquibase Properties
        run: |
          ls -l /opt/liquibase/
          cat /opt/liquibase/liquibase.properties || echo "⚠️ liquibase.properties NOT FOUND!"


      - name: Run Liquibase STATUS with Properties File
        run: |
            /opt/liquibase/liquibase --searchPath=/opt --defaults-file=/opt/liquibase/liquibase.properties status --changelog-file=liquibase/changelog.xml --log-level=debug


      - name: Getting a dump of the DB
        run: |
            mysqldump --protocol=tcp -h 13.212.238.210 -u root -p"${{ secrets.MYSQL_PASSWORD }}" database1 > $HOME/database1_5.sql
            echo "✅ Backup created at $HOME/database1_5.sql"


      - name: Verify Dump
        run: |
          echo " Verifying backup..."
          ls -lh $HOME/database1_5.sql  || echo "❌ Backup file not found!"


      - name: Run Liquibase UPDATE with Properties File
        run: |
          echo " Running Liquibase update..."
          /opt/liquibase/liquibase --searchPath=/opt --defaults-file=/opt/liquibase/liquibase.properties update --changelog-file=liquibase/changelog.xml --log-level=debug
        #continue-on-error: true  # Prevents pipeline from failing immediately


      - name: Rollback If Update Fails
        if: failure()
        run: |
          echo "❌ Liquibase update failed! Restoring database from backup..."
          echo " Dropping and recreating database1..."
          mysql --protocol=tcp -h 13.212.238.210 -u root -p"${{ secrets.MYSQL_PASSWORD }}" -e "DROP DATABASE IF EXISTS database1; CREATE DATABASE database1;"

          echo " Restoring the database..."
          mysql --protocol=tcp -h 13.212.238.210 -u root -p"${{ secrets.MYSQL_PASSWORD }}" database1 < $HOME/database1_5.sql
          
          echo " Database restored to previous state."


      - name: Print Success Message
        if: success()
        run: echo "✅ Liquibase migration applied successfully!"
