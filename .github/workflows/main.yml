name: Liquibase Migrationn

on:
  push:
    branches:
      - main # Change this if needed
  
  workflow_dispatch:  

jobs:
  liquibase-update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Liquibase
        run: |
          wget https://github.com/liquibase/liquibase/releases/download/v4.25.0/liquibase-4.25.0.zip
          unzip liquibase-4.25.0.zip -d /opt/liquibase
          chmod +x /opt/liquibase/liquibase


      - name: Test DB Connection
        run: |
          nc -zv 13.212.238.210 3306

      - name: Copy Liquibase Configuration Files
        run: |
          mkdir -p /opt/liquibase  
          cp $GITHUB_WORKSPACE/opt/liquibase/liquibase.properties /opt/liquibase/liquibase.properties
          cp $GITHUB_WORKSPACE/opt/liquibase/changelog.xml /opt/liquibase/changelog.xml
          ls -l /opt/liquibase  

      - name: Debug Liquibase Properties
        run: |
          ls -l /opt/liquibase/
          cat /opt/liquibase/liquibase.properties || echo "‚ö†Ô∏è liquibase.properties NOT FOUND!"


      - name: Run Liquibase STATUS with Properties File
        run: |
            /opt/liquibase/liquibase --searchPath=/opt --defaults-file=/opt/liquibase/liquibase.properties status --changelog-file=liquibase/changelog.xml --log-level=debug


      - name: Taking a Database Dump Inside AWS Server
        run: |
           echo "üõ†Ô∏è Creating a backup directly inside the AWS server..."
           ssh -o StrictHostKeyChecking=no ubuntu@13.212.238.210 << EOF
             mysqldump -u root -p"${{ secrets.MYSQL_PASSWORD }}" database1 > /home/ec2-user/database_backup_8.sql
           EOF
           echo "‚úÖ Backup created at /home/ec2-user/database_backup_8.sql inside AWS server"


      - name: Run Liquibase UPDATE with Properties File
        run: |
          echo " Running Liquibase update..."
          /opt/liquibase/liquibase --searchPath=/opt --defaults-file=/opt/liquibase/liquibase.properties update --changelog-file=liquibase/changelog.xml --log-level=debug
        #continue-on-error: true  # Prevents pipeline from failing immediately



      - name: Print Success Message
        if: success()
        run: echo "‚úÖ Liquibase migration applied successfully!"
